// // ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// 基礎問題 1: breakを使用してループを終了する
// 課題: 数値 1 から 100 までをループで出力します。ただし、ループが 50 に達したときにループを終了します。
// for (let i = 1; i <= 100; i++) {
//     console.log(i)
//     if (i === 50) {
//         break
//     }
// }
// for (let i = 1; i <= 100; i++) {
//     if(i<=50){
//         console.log(i)
//     }
// }
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// 問題 2: continueを使用して特定の処理をスキップ
// 課題: 1 から 20 までをループで出力します。ただし、3 の倍数は出力せずスキップします。
// for (let i = 1; i <= 20; i++) {
//     if (i % 3 === 0) {
//         continue
//     } else {
//         console.log(i)
//     }
// }
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// 問題 3: ネストしたループでのbreak
// 課題: 2重のネストループを使用して、次の条件を満たすようにコードを書いてください：

// 外側のループは 1 から 5 までを回します（変数i）。
// 内側のループは 1 から 5 までを回します（変数j）。
// 各ループの積（i * j）を出力します。
// 積が 20 を超えたらすべてのループを終了してください。
// for (let i = 1; i <= 5; i++) {
//     console.log("i :", i)
//     let j = 1;
//     for (j; j <= 5; j++) {
//         console.log("j :", j)
//         console.log("from j: ", i * j)
//         if (i * j > 20) {
//             break
//         }
//     }
//     if(i * j > 20){
//         break
//     }
// }
// outloop:
// for (let i = 1; i <= 5; i++) {
//     for (let j = 1; j <= 5; j++) {
//         console.log(`i: ${i}, j: ${j}`);
//         if (i * j > 20) {
//             break outloop;
//         }
//     }
// }
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// 問題 4: continueを使用した複雑なフィルタリング
// 課題: 以下の配列 ["apple", "banana", "cherry", "date", "elderberry"] をループし、
// 文字数が偶数のものだけを出力してください。奇数文字のものはスキップします。

// 学習ポイント:

// continue を使用して、特定の条件で処理をスキップし、ループの次の反復に進む方法を学びます。
// const arr = ["apple", "banana", "cherry", "date", "elderberry"]
// arr.forEach(frut=>{
//     if(frut.length%2===0){
//         console.log(frut);
//     }
// })
// for (frut of arr){
//     if(frut.length%2!==0){
//         console.log(frut)
//         continue
//     }else{
//         console.log(frut)
//     }
// }
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// 問題 5: 特定の条件でループをスキップする
// 課題: 複数の条件を組み合わせてcontinueを使用し、配列内の特定の要素をスキップしながら出力するコードを書いてください。

// 条件:
// 以下の配列 ["ant", "bear", "cat", "dog", "elephant", "fox", "giraffe"] をループで回します。
// 文字数が偶数の要素は出力せずスキップします（continueを使用してください）。
// 文字に「a」が含まれている場合もスキップします（continueを使用）。
const arr = ["ant", "bear", "cat", "dog", "elephant", "fox", "giraffe"]
for (animal of arr) {
    if (animal.length % 2 !== 0) {
        if (!animal.includes("a")) {
            console.log(animal)
        } continue;
    }continue;
}
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
// ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー